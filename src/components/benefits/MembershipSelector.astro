---
import Section from "../UI/Section.astro";

interface Props {
    membership_selector: MembershipSelector[];
}
interface MembershipSelector {
    id: string;
    title?: string;
    description: string;
    image: Image;
}
interface Image {
    src: string;
    alt: string;
}

const { membership_selector } = Astro.props as Props;
---
<Section class="flex flex-col items-center gap-8">
  <div class="grid grid-cols-1 md:grid-cols-3 gap-8 w-full max-w-4xl">
    
    {
        membership_selector.map((membership) => (
            <button
                class="group item"
                data-target={membership.id}
            >
              <div class="w-full h-full flex flex-col items-center justify-center gap-2 cursor-pointer">
                <img src={membership.image.src} alt={membership.image.alt} class="max-h-24 p-3 object-contain group-hover:scale-110 transition-transform">
                { membership.title && <h3 class="font-bold text-primary-600 text-center">{membership.title.toLocaleUpperCase()}</h3> }
              </div>
            </button>
        ))
    }
  </div>

    <div class="max-w-6xl w-full bg-primary-100/60 rounded-2xl">
    {
        membership_selector.map((membership, index) => (
            <div class={`description animate-fade-up animate-duration-700 animate-ease-in-out hidden`} id={membership.id}>
                <div class="flex px-8 py-6">
                    <div class="flex justify-center items-center">
                        <img class="h-48 object-contain" src={membership.image.src} alt={membership.image.alt}>
                    </div>
                    <span class="border-r border-primary-600 mx-6"></span>
                    <div class="flex flex-col justify-center text-xl">
                        {
                            membership.description.split("\n").map((paragraph) => (
                                <p set:html={paragraph}></p>
                            ))
                        }
                    </div>
                </div>
            </div>
        ))
    }
</Section>

<style>
    .item {
        @apply border-r border-r-primary-600 pr-8;
    }
    .item:last-child {
        @apply border-none pr-0;
    }
    .button, .active > div{
       @apply bg-primary-100/60 rounded-2xl
    }
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const queryString = window.location.search;
  const urlParams = new URLSearchParams(queryString);
  const selectedBenefit = urlParams.get("benefit") || "eme_club";

  const buttons = document.querySelectorAll("button[data-target]");
  const descriptions = document.querySelectorAll(".description");
  const contents = document.querySelectorAll(".content");

  // Mostrar la descripción y contenido seleccionado por defecto
  const defaultDescription = document.getElementById(selectedBenefit);
  const defaultContent = document.getElementById(selectedBenefit + "_content");

  defaultDescription.classList.remove("hidden");
  defaultContent.classList.remove("hidden");


  buttons.forEach(button => {
  
    const targetId = button.getAttribute("data-target");
    if (targetId === selectedBenefit) {
      button.classList.add("active");
    }

    button.addEventListener("click", () => {
      const targetId = button.getAttribute("data-target");

      // Agregar clase active al botón seleccionado
      buttons.forEach(btn => btn.classList.remove("active"));
      button.classList.add("active");

      // Ocultar todas las descripciones y contenidos
      descriptions.forEach(desc => desc.classList.add("hidden"));
      contents.forEach(cont => cont.classList.add("hidden"));

      // Mostrar la descripción seleccionada
      const descriptionElement = document.getElementById(targetId);
      const contentElement = document.getElementById(targetId + "_content");

      if (descriptionElement) {
        descriptionElement.classList.remove("hidden");
      } else {
        console.error(`No se encontró el elemento con id: ${targetId}`);
      }

      if (contentElement) {
        contentElement.classList.remove("hidden");
      } else {
        console.error(`No se encontró el elemento con id: ${targetId + "_content"}`);
      }
    });
  });
});
</script>