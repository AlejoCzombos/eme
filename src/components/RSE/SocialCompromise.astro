---
import H2Title from "../UI/H2Title.astro";
import Section from "../UI/Section.astro";

interface FeatureItem {
  id: string;
  title: string;
  description: string;
  icon: Icon;
}
interface Icon {
  src: string;
  alt: string;
}

const { feature_selector } = Astro.props as { feature_selector: FeatureItem[] };
---

<Section py={true} class="mb-4">
    <!-- <H2Title text="Qué te ofrecemos" class="hidden lg:block" /> -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-2 lg:gap-8 w-full border-b lg:border-none border-primary-600 pb-8 mb-8">
        
        {
            feature_selector.map(({ icon, id, title }, index) => (
                <button
                    class={`group item flex items-center cursor-pointer px-6 py-4 hover:scale-110 transition-transform duration-300 ease-in-out ${index == 0 ? "active" : ""}`}
                    data-target={id}
                >
                    <img src={icon.src} alt={icon.alt} class="mr-3 size-16" />
                    <h3 class="font-semibold text-pretty">{title.toLocaleUpperCase()}</h3>
                </button>
            ))
        }
    </div>

    <div class="max-w-6xl w-full bg-secondary-100/60 rounded-2xl">
    {
        feature_selector.map(({ id, description }, index) => (
            <div class={`description animate-fade-up animate-duration-700 animate-ease-in-out px-5 lg:px-10 py-6 lg:py-10 ${index == 0 ? "" : "hidden"}`} id={id}>
                {
                    description.split("\n").map((paragraph) => (
                        <p class="text-base lg:text-xl" set:html={paragraph}></p>
                    ))
                }
            </div>
        ))
    }
</Section>

<style>
    .button, .active{
       @apply bg-primary-100/60 scale-110;
    }
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const buttons = document.querySelectorAll("button[data-target]");
  const descriptions = document.querySelectorAll(".description");

  buttons.forEach(button => {
    button.addEventListener("click", () => {
      const targetId = button.getAttribute("data-target");

      // Agregar clase active al botón seleccionado
      buttons.forEach(btn => btn.classList.remove("active"));
      button.classList.add("active");

      // Ocultar todas las descripciones y contenidos
      descriptions.forEach(desc => desc.classList.add("hidden"));

      // Mostrar la descripción seleccionada
      const descriptionElement = document.getElementById(targetId);

      if (descriptionElement) {
        descriptionElement.classList.remove("hidden");
      } else {
        console.error(`No se encontró el elemento con id: ${targetId}`);
      }
    });
  });
});
</script>